// <auto-generated />
using System;
using MaintenanceSheduleSystem.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MaintenanceSheduleSystem.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240917120923_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MaintenanceSheduleSystem.Persistence.Entities.EquipmentEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Article")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Count")
                        .HasColumnType("integer");

                    b.Property<bool>("IsInStock")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("StoragePlace")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Equipments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f84c16d1-5373-46b1-8340-db980e94bf32"),
                            Article = "12345",
                            Count = 10,
                            IsInStock = true,
                            Name = "TestSpare",
                            StoragePlace = "A1",
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("1a1db12d-0106-4d06-afc9-8cea47ff876e"),
                            Article = "3421",
                            Count = 2,
                            IsInStock = true,
                            Name = "TestInstrument",
                            StoragePlace = "A2",
                            Type = 1
                        });
                });

            modelBuilder.Entity("MaintenanceSheduleSystem.Persistence.Entities.InstructionEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AreaId")
                        .HasColumnType("uuid");

                    b.Property<string>("Instructions")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TypeOfWork")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.ToTable("Instructions");
                });

            modelBuilder.Entity("MaintenanceSheduleSystem.Persistence.Entities.InstructionEquipmentListEntity", b =>
                {
                    b.Property<Guid>("InstructionId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EquipmentId")
                        .HasColumnType("uuid");

                    b.Property<int>("Count")
                        .HasColumnType("integer");

                    b.HasKey("InstructionId", "EquipmentId");

                    b.HasIndex("EquipmentId");

                    b.ToTable("InstructionEquipment");
                });

            modelBuilder.Entity("MaintenanceSheduleSystem.Persistence.Entities.MachineAreaEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AreaDescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("AreaName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("MachineId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("MachineId");

                    b.ToTable("MachineAreas");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f6cd323f-9c21-4dc6-8533-493a89d6459a"),
                            AreaDescription = "TestDesc",
                            AreaName = "TestArea",
                            MachineId = new Guid("baf57b0d-d6dd-481e-8b7b-ba03f57dab9c")
                        });
                });

            modelBuilder.Entity("MaintenanceSheduleSystem.Persistence.Entities.MachineEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Machines");

                    b.HasData(
                        new
                        {
                            Id = new Guid("baf57b0d-d6dd-481e-8b7b-ba03f57dab9c"),
                            Name = "TestLine",
                            SerialNumber = "123"
                        });
                });

            modelBuilder.Entity("MaintenanceSheduleSystem.Persistence.Entities.OrderEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AreaId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("BeginWorkDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("CompliteDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeadlineDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("MachineId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("PlannerEngineerId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ServicemanId")
                        .HasColumnType("uuid");

                    b.Property<int>("TypeOfWork")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.HasIndex("PlannerEngineerId");

                    b.HasIndex("ServicemanId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = new Guid("12055903-390d-42e7-b98f-16dfe77f053e"),
                            AreaId = new Guid("f6cd323f-9c21-4dc6-8533-493a89d6459a"),
                            CreatedDateTime = new DateTime(2024, 9, 17, 12, 9, 22, 657, DateTimeKind.Utc).AddTicks(949),
                            Description = "TestOrderDesc",
                            MachineId = new Guid("baf57b0d-d6dd-481e-8b7b-ba03f57dab9c"),
                            Name = "TestOrder",
                            PlannerEngineerId = new Guid("a69b942d-6024-4cb9-99ab-fdb813dda151"),
                            ServicemanId = new Guid("69fc24dd-44ed-460e-b183-36da93374664"),
                            TypeOfWork = 1
                        });
                });

            modelBuilder.Entity("MaintenanceSheduleSystem.Persistence.Entities.OrderEquipmentListEntity", b =>
                {
                    b.Property<Guid>("OrderId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EquipmentId")
                        .HasColumnType("uuid");

                    b.Property<int>("EquipmentCount")
                        .HasColumnType("integer");

                    b.HasKey("OrderId", "EquipmentId");

                    b.HasIndex("EquipmentId");

                    b.ToTable("OrderEquipment");

                    b.HasData(
                        new
                        {
                            OrderId = new Guid("12055903-390d-42e7-b98f-16dfe77f053e"),
                            EquipmentId = new Guid("f84c16d1-5373-46b1-8340-db980e94bf32"),
                            EquipmentCount = 1
                        },
                        new
                        {
                            OrderId = new Guid("12055903-390d-42e7-b98f-16dfe77f053e"),
                            EquipmentId = new Guid("1a1db12d-0106-4d06-afc9-8cea47ff876e"),
                            EquipmentCount = 1
                        });
                });

            modelBuilder.Entity("MaintenanceSheduleSystem.Persistence.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .HasColumnType("text");

                    b.Property<string>("HashedPassword")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsSacked")
                        .HasColumnType("boolean");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("MaintenanceSheduleSystem.Persistence.Entities.AdministratorEntity", b =>
                {
                    b.HasBaseType("MaintenanceSheduleSystem.Persistence.Entities.UserEntity");

                    b.Property<string>("SigningKey")
                        .IsRequired()
                        .HasColumnType("text");

                    b.ToTable("Administrators");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5ac264b6-7490-48b2-93ca-63204fb0bc7b"),
                            Email = "test@domain.ru",
                            FullName = "surname name lastname",
                            HashedPassword = "$2a$11$x8bWa043.gamnoLShZzhd.5pnkgFjao7KLpXN7Vg5nJQW1O6XGiiu",
                            IsSacked = false,
                            Role = 1,
                            SigningKey = ""
                        });
                });

            modelBuilder.Entity("MaintenanceSheduleSystem.Persistence.Entities.PlannerEngineerEntity", b =>
                {
                    b.HasBaseType("MaintenanceSheduleSystem.Persistence.Entities.UserEntity");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.ToTable("PlannerEngineers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a69b942d-6024-4cb9-99ab-fdb813dda151"),
                            Email = "testPlanner@domain.ru",
                            FullName = "Test, Test, Planner",
                            HashedPassword = "$2a$11$G9kLyGRTrQDdyU0l92d80uU/J2shCzQzaFxZjMLbdAQumJUhbk.8C",
                            IsSacked = false,
                            Role = 2,
                            Title = "TestTitle"
                        });
                });

            modelBuilder.Entity("MaintenanceSheduleSystem.Persistence.Entities.ServicemanEntity", b =>
                {
                    b.HasBaseType("MaintenanceSheduleSystem.Persistence.Entities.UserEntity");

                    b.ToTable("Servicemen");

                    b.HasData(
                        new
                        {
                            Id = new Guid("69fc24dd-44ed-460e-b183-36da93374664"),
                            Email = "testService@domain.ru",
                            FullName = "Test Test Serviceman",
                            HashedPassword = "$2a$11$LiU42UKhNy4rPTDCHpBVwOAG61HbRNlyQMGGR2iuPE3wyW.YqRMw.",
                            IsSacked = false,
                            Role = 3
                        });
                });

            modelBuilder.Entity("MaintenanceSheduleSystem.Persistence.Entities.InstructionEntity", b =>
                {
                    b.HasOne("MaintenanceSheduleSystem.Persistence.Entities.MachineAreaEntity", "MachineArea")
                        .WithMany("Instructions")
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MachineArea");
                });

            modelBuilder.Entity("MaintenanceSheduleSystem.Persistence.Entities.InstructionEquipmentListEntity", b =>
                {
                    b.HasOne("MaintenanceSheduleSystem.Persistence.Entities.EquipmentEntity", "Equipment")
                        .WithMany("InstructionEquipmentLists")
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MaintenanceSheduleSystem.Persistence.Entities.InstructionEntity", "Instruction")
                        .WithMany("InstructionEquipmentLists")
                        .HasForeignKey("InstructionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipment");

                    b.Navigation("Instruction");
                });

            modelBuilder.Entity("MaintenanceSheduleSystem.Persistence.Entities.MachineAreaEntity", b =>
                {
                    b.HasOne("MaintenanceSheduleSystem.Persistence.Entities.MachineEntity", "Machine")
                        .WithMany("MachineAreas")
                        .HasForeignKey("MachineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Machine");
                });

            modelBuilder.Entity("MaintenanceSheduleSystem.Persistence.Entities.OrderEntity", b =>
                {
                    b.HasOne("MaintenanceSheduleSystem.Persistence.Entities.MachineAreaEntity", "MachineArea")
                        .WithMany("Orders")
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MaintenanceSheduleSystem.Persistence.Entities.PlannerEngineerEntity", "PlannerEngineer")
                        .WithMany("Orders")
                        .HasForeignKey("PlannerEngineerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MaintenanceSheduleSystem.Persistence.Entities.ServicemanEntity", "Serviceman")
                        .WithMany("Orders")
                        .HasForeignKey("ServicemanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MachineArea");

                    b.Navigation("PlannerEngineer");

                    b.Navigation("Serviceman");
                });

            modelBuilder.Entity("MaintenanceSheduleSystem.Persistence.Entities.OrderEquipmentListEntity", b =>
                {
                    b.HasOne("MaintenanceSheduleSystem.Persistence.Entities.EquipmentEntity", "Equipment")
                        .WithMany("OrderEquipmentLists")
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MaintenanceSheduleSystem.Persistence.Entities.OrderEntity", "Order")
                        .WithMany("OrderEquipmentList")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipment");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("MaintenanceSheduleSystem.Persistence.Entities.AdministratorEntity", b =>
                {
                    b.HasOne("MaintenanceSheduleSystem.Persistence.Entities.UserEntity", null)
                        .WithOne()
                        .HasForeignKey("MaintenanceSheduleSystem.Persistence.Entities.AdministratorEntity", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MaintenanceSheduleSystem.Persistence.Entities.PlannerEngineerEntity", b =>
                {
                    b.HasOne("MaintenanceSheduleSystem.Persistence.Entities.UserEntity", null)
                        .WithOne()
                        .HasForeignKey("MaintenanceSheduleSystem.Persistence.Entities.PlannerEngineerEntity", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MaintenanceSheduleSystem.Persistence.Entities.ServicemanEntity", b =>
                {
                    b.HasOne("MaintenanceSheduleSystem.Persistence.Entities.UserEntity", null)
                        .WithOne()
                        .HasForeignKey("MaintenanceSheduleSystem.Persistence.Entities.ServicemanEntity", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MaintenanceSheduleSystem.Persistence.Entities.EquipmentEntity", b =>
                {
                    b.Navigation("InstructionEquipmentLists");

                    b.Navigation("OrderEquipmentLists");
                });

            modelBuilder.Entity("MaintenanceSheduleSystem.Persistence.Entities.InstructionEntity", b =>
                {
                    b.Navigation("InstructionEquipmentLists");
                });

            modelBuilder.Entity("MaintenanceSheduleSystem.Persistence.Entities.MachineAreaEntity", b =>
                {
                    b.Navigation("Instructions");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("MaintenanceSheduleSystem.Persistence.Entities.MachineEntity", b =>
                {
                    b.Navigation("MachineAreas");
                });

            modelBuilder.Entity("MaintenanceSheduleSystem.Persistence.Entities.OrderEntity", b =>
                {
                    b.Navigation("OrderEquipmentList");
                });

            modelBuilder.Entity("MaintenanceSheduleSystem.Persistence.Entities.PlannerEngineerEntity", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("MaintenanceSheduleSystem.Persistence.Entities.ServicemanEntity", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
